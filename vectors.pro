; vectors.pro; by abinadab dieter / adieter@mail.utexas.edu; 3d cartesian vector operationsfunction cross,u,v	; returns the cross product of u and v	; 	cx = u.y*v.z-u.z*v.y	cy = -(u.x*v.z-u.z*v.x)	cz = u.x*v.y-u.y*v.x	result = {vector,cx,cy,cz}	return,resultendfunction dot,u,v	; returns the dot product of u and v	result = 0.0	result = u.x*v.x+u.y*v.y+u.z*v.z	return,resultendfunction minus,u,v	; returns the vector u-v	return,{vector,u.x-v.x,u.y-v.y,u.z-v.z}endfunction plus,u,v	; returns the vector u+v	return,{vector,u.x+v.x,u.y+v.y,u.z+v.z}endfunction scale,a,v	; returns a vector v multiplied by a scalar a	return,{vector,a*v.x,a*v.y,a*v.z}endfunction mag2,r	; returns the magnitude squared of a vector r	return,r.x^2+r.y^2+r.z^2endfunction mag,r	; returns the magnitude of the vector r	return,sqrt(mag2(r))endfunction unit,v	; returns a unit vector pointing along the vector v	return,scale(1./mag(v),v)end; create the vector structuredeclare = {vector,x:0.0,y:0.0,z:0.0}end